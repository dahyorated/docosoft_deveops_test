trigger: none

resources:
  pipelines:
  - pipeline: buildPipeline
    source: 'dahyorated.docosoft_deveops_test' # <- Replace with your actual CI pipeline name
    trigger:
      branches:
        include:
          - main
          - features/*

variables:
  imageRepository: 'counterapi'
  dockerRegistryServiceConnection: 'sp-acrezidocosoft'
  azureSubscriptionServiceConnection: 'sp-azurermezi'
  resourceGroupName: 'Ezi-RG'
  webAppName: 'webapp-ezidocosoft'
  acrLoginServer: 'acrezidocosoft.azurecr.io'

pool:
  name: 'ezi-ado-host'

stages:
- stage: DeployToDev
  displayName: Deploy to Development
  jobs:
  - deployment: DeployDev
    displayName: Deploy to Azure Web App
    environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Build Artifacts'
            inputs:
              buildType: 'specific'
              project: '$(System.TeamProject)'
              definition: $(resources.pipeline.buildPipeline.pipelineId)
              runVersion: 'latest'
              artifact: 'build_artifacts'
              path: '$(Build.SourcesDirectory)/build_artifacts'

          - task: AzureCLI@2
            displayName: 'Deploy Docker Image to Azure App Service'
            inputs:
              azureSubscription: '$(azureSubscriptionServiceConnection)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                IMAGE_TAG=$(resources.pipeline.buildPipeline.runID)
                FULL_IMAGE_NAME=$(acrLoginServer)/$(imageRepository):$IMAGE_TAG

                echo "Deploying image: $FULL_IMAGE_NAME to App Service: $(webAppName)"

                ACR_CREDENTIALS=$(az acr credential show --name acrezidocosoft --query "{username: username, password: passwords[0].value}" -o json)
                ACR_USERNAME=$(echo $ACR_CREDENTIALS | jq -r .username)
                ACR_PASSWORD=$(echo $ACR_CREDENTIALS | jq -r .password)

                az webapp config appsettings set \
                  --name $(webAppName) \
                  --resource-group $(resourceGroupName) \
                  --settings \
                    DOCKER_REGISTRY_SERVER_URL="https://$(acrLoginServer)" \
                    DOCKER_REGISTRY_SERVER_USERNAME="$ACR_USERNAME" \
                    DOCKER_REGISTRY_SERVER_PASSWORD="$ACR_PASSWORD" \
                    WEBSITES_PORT=80 \
                    WEBSITES_ENABLE_APP_SERVICE_STORAGE=false \
                  --output json
                
                az webapp config appsettings set \
                  --name $(webAppName) \
                  --resource-group $(resourceGroupName) \
                  --settings WEBSITES_PORT=80

                echo "Deployment complete."